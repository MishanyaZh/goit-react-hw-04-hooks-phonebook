{"version":3,"sources":["Filter/Filter.module.css","ContactList/ContactList.module.css","ContactForm/ContactForm.module.css","ContactForm/ContactForm.jsx","Filter/Filter.jsx","ContactList/ContactList.jsx","containers/Section/Section.styled.jsx","containers/Section/Section.jsx","containers/MainContainer/MainContainer.styled.jsx","containers/MainContainer/MainContainer.jsx","App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","formSubmitHandler","resetState","className","css","form","onSubmit","this","id","formNameNumber","input","onChange","type","placeholder","pattern","title","required","formButton","Component","Filter","htmlFor","filter","filterName","uuidv4","ContactList","contacts","onDeleteContact","contactsList","map","contactsItem","listButton","onClick","Container","styled","div","Subtitle","h2","SectionContacts","children","MainContainer","Title","h1","MContainer","App","changeFilter","data","newContact","prevState","doubleContact","find","contact","toLowerCase","includes","length","toast","error","deleteContact","contactId","getVisibleContacts","normalizedFilter","parsedContacts","JSON","parse","localStorage","getItem","_","setItem","stringify","visibleName","Section","position","reverseOrder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0eb3c1c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2k_cC\",\"filterName\":\"Filter_filterName__28_sP\",\"input\":\"Filter_input__1MXre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactList_contactsItem__25AbN\",\"contactsList\":\"ContactList_contactsList__CeEZf\",\"listButton\":\"ContactList_listButton__5JM11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__149ym\",\"formNameNumber\":\"ContactForm_formNameNumber__G_HKo\",\"input\":\"ContactForm_input__2QpkV\",\"formButton\":\"ContactForm_formButton__2dFts\"};","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport css from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.formSubmitHandler(this.state);\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={css.form} onSubmit={this.handleSubmit}>\n        <label id={this.name}>\n          <p className={css.formNameNumber}>Name</p>\n          <input\n            className={css.input}\n            value={this.state.name}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"add name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label id={this.name}>\n          <p className={css.formNameNumber}>Number</p>\n          <input\n            className={css.input}\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"add number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={css.formButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  formSubmitHandler: PropTypes.func,\n  handleChange: PropTypes.string,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label htmlFor={value.id} className={css.filter}>\n    <p className={css.filterName}>Find contacts by name</p>\n    <input\n      id={uuidv4()}\n      className={css.input}\n      value={value}\n      onChange={onChange}\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"find\"\n    />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={css.contactsList}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={css.contactsItem}>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <span>\n          <button\n            className={css.listButton}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            delete\n          </button>\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background: rgb(199 177 177);\n  border-radius: 5px;\n`;\n\nexport const Subtitle = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Subtitle } from '../Section/Section.styled';\n\nconst SectionContacts = ({ title, children }) => (\n  <Container>\n    {title && <Subtitle>{title}</Subtitle>}\n    {children}\n  </Container>\n);\n\nexport default SectionContacts;\n\nSectionContacts.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  display: block;\n\n  max-width: 400px;\n  min-width: 290px;\n\n  margin: 0 auto;\n\n  padding: 10px;\n\n  border: 1px solid black;\n  border-radius: 5px;\n\n  box-shadow: 3px 2px 10px 2px black;\n  background: rgb(217 196 196);\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { MainContainer, Title } from './MainContainer.styled';\n\nconst MContainer = ({ children, title }) => (\n  <MainContainer>\n    <Title>{title}</Title>\n    {children}\n  </MainContainer>\n);\n\nexport default MContainer;\n\nMContainer.propTypes = {\n  title: PropTypes.string,\n};\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport Section from './containers/Section/Section';\nimport MContainer from './containers/MainContainer/MainContainer';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  formSubmitHandler = data => {\n    const newContact = {\n      name: data.name,\n      number: data.number,\n      id: uuidv4(),\n    };\n\n    this.setState(prevState => {\n      const { contacts } = prevState;\n\n      const doubleContact = contacts.find(contact =>\n        contact.name.toLowerCase().includes(data.name.toLowerCase()),\n      );\n\n      if (doubleContact && doubleContact.name.length === data.name.length) {\n        toast.error(`${data.name} is already in contacts`);\n        return [...prevState.contacts];\n      }\n\n      return {\n        contacts: [newContact, ...prevState.contacts],\n      };\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  // finnd contact to includ word with filter\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const visibleName = this.getVisibleContacts();\n    return (\n      <MContainer title=\"Phonebook\">\n        <Section>\n          <ContactForm\n            formSubmitHandler={this.formSubmitHandler}\n            // onChange={this.handleChange}\n          />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter onChange={this.changeFilter} value={this.state.filter} />\n          <ContactList\n            contacts={visibleName}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n        <Toaster position=\"top-right\" reverseOrder={false} />\n      </MContainer>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}