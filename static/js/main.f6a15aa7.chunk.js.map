{"version":3,"sources":["ContactList/ContactList.module.css","ContactForm/ContactForm.module.css","ContactForm/ContactForm.jsx","Filter/Filter.jsx","ContactList/ContactList.jsx","containers/Section/Section.styled.jsx","containers/Section/Section.jsx","containers/MainContainer/MainContainer.styled.jsx","containers/MainContainer/MainContainer.jsx","App.jsx","index.js","Filter/Filter.module.css"],"names":["module","exports","ContactForm","formSubmitHandler","useState","name","setName","number","setNumber","resetState","className","css","form","onSubmit","event","preventDefault","id","formNameNumber","input","value","onChange","currentTarget","type","placeholder","pattern","title","required","formButton","Filter","htmlFor","filter","filterName","uuidv4","ContactList","contacts","onDeleteContact","contactsList","map","contactsItem","listButton","onClick","Container","styled","div","Subtitle","h2","SectionContacts","children","MainContainer","Title","h1","MContainer","App","setContacts","setFilter","localStorageKeyName","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","filltredContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","Section","newContact","prevState","doubleContact","find","length","toast","error","success","icon","e","contactId","position","reverseOrder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6a15aa7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactList_contactsItem__25AbN\",\"contactsList\":\"ContactList_contactsList__CeEZf\",\"listButton\":\"ContactList_listButton__5JM11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__149ym\",\"formNameNumber\":\"ContactForm_formNameNumber__G_HKo\",\"input\":\"ContactForm_input__2QpkV\",\"formButton\":\"ContactForm_formButton__2dFts\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = ({ formSubmitHandler }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    formSubmitHandler({ name, number });\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label id={name}>\n        <p className={css.formNameNumber}>Name</p>\n        <input\n          className={css.input}\n          value={name}\n          onChange={handleChangeName}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"add name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label id={name}>\n        <p className={css.formNameNumber}>Number</p>\n        <input\n          className={css.input}\n          value={number}\n          onChange={handleChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"add number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={css.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\n// class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     this.props.formSubmitHandler(this.state);\n//     this.resetState();\n//   };\n\n// resetState = () => {\n//   this.setState({\n//     name: '',\n//     number: '',\n//   });\n// };\n\n//   render() {\n//     return (\n//       <form className={css.form} onSubmit={this.handleSubmit}>\n//         <label id={this.name}>\n//           <p className={css.formNameNumber}>Name</p>\n//           <input\n//             className={css.input}\n//             value={this.state.name}\n//             onChange={this.handleChange}\n//             type=\"text\"\n//             name=\"name\"\n//             placeholder=\"add name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//           />\n//         </label>\n//         <label id={this.name}>\n//           <p className={css.formNameNumber}>Number</p>\n//           <input\n//             className={css.input}\n//             value={this.state.number}\n//             onChange={this.handleChange}\n//             type=\"tel\"\n//             name=\"number\"\n//             placeholder=\"add number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//           />\n//         </label>\n\n//         <button className={css.formButton} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  formSubmitHandler: PropTypes.func,\n  handleChange: PropTypes.string,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label htmlFor={value.id} className={css.filter}>\n    <p className={css.filterName}>Find contacts by name</p>\n    <input\n      id={uuidv4()}\n      className={css.input}\n      value={value}\n      onChange={onChange}\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"find\"\n    />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={css.contactsList}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={css.contactsItem}>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <span>\n          <button\n            className={css.listButton}\n            type=\"button\"\n            onClick={() => onDeleteContact(id, name)}\n          >\n            delete\n          </button>\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background: rgb(199 177 177);\n  border-radius: 5px;\n`;\n\nexport const Subtitle = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Subtitle } from '../Section/Section.styled';\n\nconst SectionContacts = ({ title, children }) => (\n  <Container>\n    {title && <Subtitle>{title}</Subtitle>}\n    {children}\n  </Container>\n);\n\nexport default SectionContacts;\n\nSectionContacts.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  display: block;\n\n  max-width: 400px;\n  min-width: 290px;\n\n  margin: 0 auto;\n\n  padding: 10px;\n\n  border: 1px solid black;\n  border-radius: 5px;\n\n  box-shadow: 3px 2px 10px 2px black;\n  background: rgb(217 196 196);\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { MainContainer, Title } from './MainContainer.styled';\n\nconst MContainer = ({ children, title }) => (\n  <MainContainer>\n    <Title>{title}</Title>\n    {children}\n  </MainContainer>\n);\n\nexport default MContainer;\n\nMContainer.propTypes = {\n  title: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport Section from './containers/Section/Section';\nimport MContainer from './containers/MainContainer/MainContainer';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const [filter, setFilter] = useState('');\n  const localStorageKeyName = 'contacts';\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem(localStorageKeyName));\n    setContacts(parsedContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKeyName, JSON.stringify(contacts));\n  }, [contacts]);\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const formSubmitHandler = ({name, number}) => {\n    const newContact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    setContacts(prevState => {\n      const doubleContact = prevState.find(contact =>\n        contact.name.toLowerCase().includes(name.toLowerCase()),\n      );\n\n      if (doubleContact && doubleContact.name.length === name.length) {\n        toast.error(`${name} is already in contacts`);\n        return [...prevState];\n      }\n      else {\n        setContacts([newContact, ...prevState]);\n        toast.success(`${name} add to Contacts`, { icon: '👏' });\n      }\n    });\n  };\n\n  const deleteContact = (contactId, name) => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n    toast.success(`${name} delete with Contacts!`);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const filltredContacts = getVisibleContacts();\n\n  return (\n    <MContainer title=\"Phonebook\">\n      <Section>\n        <ContactForm formSubmitHandler={formSubmitHandler} />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter onChange={changeFilter} value={filter} />\n        <ContactList contacts={filltredContacts} onDeleteContact={deleteContact} />\n      </Section>\n      <Toaster position=\"top-center\" reverseOrder={false} />\n    </MContainer>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2k_cC\",\"filterName\":\"Filter_filterName__28_sP\",\"input\":\"Filter_input__1MXre\"};"],"sourceRoot":""}